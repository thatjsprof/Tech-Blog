(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{305:function(t,e,o){"use strict";o.r(e);var r=o(20);o(65);function n(object,t){var e=Object.keys(object);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(object);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(object,t).enumerable}))),e.push.apply(e,o)}return e}function c(t){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?n(Object(source),!0).forEach((function(e){Object(r.a)(t,e,source[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(source)):n(Object(source)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(source,e))}))}return t}var d={layout:"admin",middleware:["check-auth","auth"],asyncData:function(t){return t.app.$axios.$get("/posts/"+t.params.postId+".json").then((function(data){return{loadedPost:c(c({},data),{},{id:t.params.postId})}})).catch((function(e){t.error(e)}))},methods:{onSubmitted:function(t){var e=this;this.$store.dispatch("editPost",t).then((function(t){var o;null!=t&&null!==(o=t.response)&&void 0!==o&&o.status?e.$toastr.e("Could not edit post"):(e.$toastr.s("Post Edited"),e.$router.push("/admin"))}))}}},l=o(8),component=Object(l.a)(d,(function(){var t=this,e=t.$createElement,o=t._self._c||e;return o("div",{staticClass:"admin-post-page"},[o("div",{staticClass:"row"},[o("h1",{staticClass:"u-margin-top-big"},[t._v("Edit Post")]),t._v(" "),o("section",{staticClass:"update-form"},[o("AdminPostForm",{attrs:{post:t.loadedPost},on:{submit:t.onSubmitted}})],1)])])}),[],!1,null,null,null);e.default=component.exports;installComponents(component,{AdminPostForm:o(128).default})}}]);